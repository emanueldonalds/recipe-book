{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/select\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/core\";\n\nfunction ServingsInputComponent_mat_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", option_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(option_r1);\n  }\n}\n\nexport let ServingsInputComponent = /*#__PURE__*/(() => {\n  class ServingsInputComponent {\n    constructor() {\n      this.servingOptions = Array.from(Array(10).keys()).map(x => x + 1);\n    }\n\n    ngOnInit() {}\n\n    getservingsErrorMessage() {\n      if (this.form.controls.servings.hasError('min')) {\n        return \"Must be 1 or more\";\n      }\n\n      if (this.form.controls.servings.hasError('max')) {\n        return \"Max 100\";\n      }\n\n      if (this.form.controls.servings.hasError('pattern')) {\n        return \"Must be a number\";\n      }\n\n      return \"\";\n    }\n\n  }\n\n  ServingsInputComponent.ɵfac = function ServingsInputComponent_Factory(t) {\n    return new (t || ServingsInputComponent)();\n  };\n\n  ServingsInputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ServingsInputComponent,\n    selectors: [[\"app-servings-input\"]],\n    inputs: {\n      form: \"form\"\n    },\n    decls: 6,\n    vars: 2,\n    consts: [[3, \"formGroup\"], [1, \"number-input\"], [\"formControlName\", \"servings\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function ServingsInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"mat-form-field\", 1)(2, \"mat-label\");\n        i0.ɵɵtext(3, \"Portioner\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-select\", 2);\n        i0.ɵɵtemplate(5, ServingsInputComponent_mat_option_5_Template, 2, 2, \"mat-option\", 3);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.servingOptions);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i2.MatFormField, i2.MatLabel, i3.MatSelect, i1.NgControlStatus, i1.FormControlName, i4.NgForOf, i5.MatOption],\n    styles: [\"\"]\n  });\n  return ServingsInputComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}