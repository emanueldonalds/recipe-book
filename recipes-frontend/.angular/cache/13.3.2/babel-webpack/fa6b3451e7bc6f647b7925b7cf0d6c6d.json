{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { getInvalidCharactersErrorMessage, invalidCharactersValidator } from '../../custom-validators';\nimport { IngredientDialogResponse } from './ingredient-dialog-response';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"src/app/services/unit.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/flex-layout/flex\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"@angular/material/button\";\n\nfunction IngredientDialogComponent_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.getNameErrorMessage(), \"\");\n  }\n}\n\nfunction IngredientDialogComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.getQuantityErrorMessage(), \"\");\n  }\n}\n\nfunction IngredientDialogComponent_mat_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const unit_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", unit_r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", unit_r6, \" \");\n  }\n}\n\nfunction IngredientDialogComponent_button_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function IngredientDialogComponent_button_20_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.remove();\n    });\n    i0.ɵɵtext(1, \"Ta bort\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction IngredientDialogComponent_button_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function IngredientDialogComponent_button_21_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.add();\n    });\n    i0.ɵɵtext(1, \"L\\u00E4gg till\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction IngredientDialogComponent_button_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function IngredientDialogComponent_button_22_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.edit();\n    });\n    i0.ɵɵtext(1, \"Redigera\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let IngredientDialogComponent = /*#__PURE__*/(() => {\n  class IngredientDialogComponent {\n    constructor(dialogRef, data, unitService) {\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.unitService = unitService;\n      this.form = new FormGroup({\n        name: new FormControl('', [Validators.required, Validators.maxLength(34), invalidCharactersValidator()]),\n        quantity: new FormControl('', [Validators.pattern('^[+-]?([0-9]*[.])?[0-9]+$'), Validators.maxLength(5)]),\n        unit: new FormControl()\n      });\n      this.ingredientToEdit = data === null || data === void 0 ? void 0 : data.ingredient;\n\n      if (this.ingredientToEdit) {\n        this.editMode = true;\n        this.form.controls.name.setValue(this.ingredientToEdit.name);\n        this.form.controls.quantity.setValue(this.ingredientToEdit.quantity.value);\n        this.form.controls.unit.setValue(this.ingredientToEdit.quantity.unit);\n        this.ingredients = data.ingredients;\n      } else {\n        this.editMode = false;\n      }\n\n      this.units = [];\n    }\n\n    ngOnInit() {\n      this.unitService.getUnits().subscribe(units => {\n        this.units = units;\n      });\n    }\n\n    add() {\n      var _a, _b, _c;\n\n      if (!this.form.valid) {\n        this.form.markAllAsTouched();\n        return;\n      }\n\n      let quantity = {\n        value: (_a = this.form.get('quantity')) === null || _a === void 0 ? void 0 : _a.value,\n        unit: (_b = this.form.get('unit')) === null || _b === void 0 ? void 0 : _b.value\n      };\n      let ingredient = {\n        name: (_c = this.form.get('name')) === null || _c === void 0 ? void 0 : _c.value,\n        quantity: quantity\n      };\n      this.dialogRef.close(new IngredientDialogResponse(ingredient, false));\n    }\n\n    edit() {\n      if (!this.form.valid) {\n        this.form.markAllAsTouched();\n        return;\n      }\n\n      if (this.ingredientToEdit) {\n        this.ingredientToEdit.name = this.form.controls.name.value;\n        this.ingredientToEdit.quantity.value = this.form.controls.quantity.value;\n        this.ingredientToEdit.quantity.unit = this.form.controls.unit.value;\n      }\n\n      this.dialogRef.close();\n    }\n\n    remove() {\n      var _a;\n\n      this.ingredients = (_a = this.ingredients) === null || _a === void 0 ? void 0 : _a.filter(i => i !== this.ingredientToEdit);\n      this.dialogRef.close(new IngredientDialogResponse(this.ingredientToEdit, true));\n    }\n\n    getNameErrorMessage() {\n      if (this.form.controls.name.hasError('required')) {\n        return \"Name is required\";\n      }\n\n      if (this.form.controls.name.hasError('maxlength')) {\n        return \"Max 34 characters\";\n      }\n\n      if (this.form.controls.name.hasError('invalidCharacters')) {\n        return getInvalidCharactersErrorMessage();\n      }\n\n      return \"\";\n    }\n\n    getQuantityErrorMessage() {\n      if (this.form.controls.quantity.hasError('regexp')) {\n        return \"Must be a number\";\n      }\n\n      if (this.form.controls.quantity.hasError('maxlength')) {\n        return \"Max 5 characters\";\n      }\n\n      return \"\";\n    }\n\n  }\n\n  IngredientDialogComponent.ɵfac = function IngredientDialogComponent_Factory(t) {\n    return new (t || IngredientDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.UnitService));\n  };\n\n  IngredientDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IngredientDialogComponent,\n    selectors: [[\"app-ingredient-dialog\"]],\n    decls: 23,\n    vars: 7,\n    consts: [[3, \"formGroup\"], [\"fxLayout\", \"row\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"required\", \"\"], [4, \"ngIf\"], [1, \"narrow\"], [\"matInput\", \"\", \"formControlName\", \"quantity\"], [\"formControlName\", \"unit\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-between center\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-button\", \"\", \"color\", \"warn\", 3, \"click\", 4, \"ngIf\"], [\"mat-button\", \"\", 3, \"click\", 4, \"ngIf\"], [3, \"value\"], [\"mat-button\", \"\", \"color\", \"warn\", 3, \"click\"]],\n    template: function IngredientDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"mat-form-field\")(3, \"mat-label\");\n        i0.ɵɵtext(4, \"Ingrediens\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 2);\n        i0.ɵɵtemplate(6, IngredientDialogComponent_mat_error_6_Template, 2, 1, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-form-field\", 4)(8, \"mat-label\");\n        i0.ɵɵtext(9, \"M\\u00E4ngd\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 5);\n        i0.ɵɵtemplate(11, IngredientDialogComponent_mat_error_11_Template, 2, 1, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-form-field\", 4)(13, \"mat-label\");\n        i0.ɵɵtext(14, \"Enhet\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mat-select\", 6);\n        i0.ɵɵtemplate(16, IngredientDialogComponent_mat_option_16_Template, 2, 2, \"mat-option\", 7);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(17, \"div\", 8)(18, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function IngredientDialogComponent_Template_button_click_18_listener() {\n          return ctx.dialogRef.close();\n        });\n        i0.ɵɵtext(19, \"Avbryt\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(20, IngredientDialogComponent_button_20_Template, 2, 0, \"button\", 10);\n        i0.ɵɵtemplate(21, IngredientDialogComponent_button_21_Template, 2, 0, \"button\", 11);\n        i0.ɵɵtemplate(22, IngredientDialogComponent_button_22_Template, 2, 0, \"button\", 11);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.name.invalid && (ctx.form.controls.name.dirty || ctx.form.controls.name.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.quantity.invalid && (ctx.form.controls.quantity.dirty || ctx.form.controls.quantity.touched));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", ctx.units);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.editMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.editMode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.editMode);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i4.DefaultLayoutDirective, i5.MatFormField, i5.MatLabel, i6.MatInput, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i3.RequiredValidator, i7.NgIf, i5.MatError, i8.MatSelect, i7.NgForOf, i9.MatOption, i4.DefaultLayoutAlignDirective, i10.MatButton],\n    styles: [\"mat-form-field[_ngcontent-%COMP%]{min-width:1em!important}.close-button[_ngcontent-%COMP%]{float:right;top:-24px;right:-24px}\"]\n  });\n  return IngredientDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}