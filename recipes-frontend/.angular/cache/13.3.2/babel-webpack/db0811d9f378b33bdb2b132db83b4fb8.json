{"ast":null,"code":"import { getInvalidCharactersErrorMessage } from 'src/app/components/custom-validators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/common\";\n\nfunction RecipeNameComponent_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.getNameErrorMessage(), \"\");\n  }\n}\n\nexport let RecipeNameComponent = /*#__PURE__*/(() => {\n  class RecipeNameComponent {\n    constructor() {}\n\n    ngOnInit() {}\n\n    getNameErrorMessage() {\n      if (this.form.controls.name.hasError('required')) {\n        return \"Name is required\";\n      }\n\n      if (this.form.controls.name.hasError('maxlength')) {\n        return \"Max 64 characters\";\n      }\n\n      if (this.form.controls.name.hasError('invalidCharacters')) {\n        return getInvalidCharactersErrorMessage();\n      }\n\n      return \"\";\n    }\n\n  }\n\n  RecipeNameComponent.ɵfac = function RecipeNameComponent_Factory(t) {\n    return new (t || RecipeNameComponent)();\n  };\n\n  RecipeNameComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RecipeNameComponent,\n    selectors: [[\"app-recipe-name-input\"]],\n    inputs: {\n      form: \"form\"\n    },\n    decls: 6,\n    vars: 2,\n    consts: [[3, \"formGroup\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"required\", \"\"], [4, \"ngIf\"]],\n    template: function RecipeNameComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"mat-form-field\")(2, \"mat-label\");\n        i0.ɵɵtext(3, \"Receptets namn\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 1);\n        i0.ɵɵtemplate(5, RecipeNameComponent_mat_error_5_Template, 2, 1, \"mat-error\", 2);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.controls.name.invalid && (ctx.form.controls.name.dirty || ctx.form.controls.name.touched));\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i2.MatFormField, i2.MatLabel, i3.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i4.NgIf, i2.MatError],\n    styles: [\"\"]\n  });\n  return RecipeNameComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}