{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UnitService = /*#__PURE__*/(() => {\n  class UnitService {\n    constructor(http) {\n      this.http = http;\n      this.unitsUrl = \"http://192.168.0.126:8555/units\";\n      this.unitsMap = new Map([[\"LITER\", \"l\"], [\"MILLILITER\", \"ml\"], [\"DECILITER\", \"dl\"], [\"GRAM\", \"g\"], [\"MILLIGRAM\", \"mg\"], [\"KILOGRAM\", \"kg\"], [\"PIECES\", \"st\"]]);\n    }\n\n    getUnits() {\n      return this.http.get(this.unitsUrl).pipe(map(response => {\n        let units = [];\n        response.forEach(unit => {\n          if (unit !== \"NONE\") {\n            units.push(this.toUnitValue(unit));\n          }\n        });\n        return units;\n      }));\n    }\n\n    toUnitKey(value) {\n      for (let [key, mapValue] of this.unitsMap.entries()) {\n        if (mapValue === value) {\n          return key;\n        }\n      }\n\n      return '';\n    }\n\n    toUnitValue(key) {\n      return this.unitsMap.get(key);\n    }\n\n  }\n\n  UnitService.ɵfac = function UnitService_Factory(t) {\n    return new (t || UnitService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UnitService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UnitService,\n    factory: UnitService.ɵfac,\n    providedIn: 'root'\n  });\n  return UnitService;\n})();","map":null,"metadata":{},"sourceType":"module"}