package recipes.recipes.api.domain.model.dto;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBRangeKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import recipes.recipes.api.domain.model.Ingredient;
import recipes.recipes.api.domain.model.Recipe;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

@Data
@AllArgsConstructor
@NoArgsConstructor
@DynamoDBTable(tableName = "recipes")
public final class RecipeDTO implements Serializable {

    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    private String id;

    private String name;

    private String instructions;

    private long servings;

    private List<IngredientDTO> ingredients;

    public static RecipeDTO create(final Recipe recipe) {
        final List<IngredientDTO> ingredientsDTO = new ArrayList<>();

        for (Ingredient ingredient : recipe.getIngredients()) {

            final QuantityDTO quantity = new QuantityDTO(
                    ingredient.quantity().value(),
                    ingredient.quantity().unit().name());

            final IngredientDTO ingredientDTO = new IngredientDTO(
                    ingredient.name(), quantity);
            ingredientsDTO.add(ingredientDTO);
        }

        return new RecipeDTO(recipe.getId().toString(),
                             recipe.getName(),
                             recipe.getInstructions(),
                             recipe.getservings(),
                             ingredientsDTO);
    }

}
